[package]
name = "opnsense-config-faker"
version = "0.1.0"
edition = "2021"
authors = ["EvilBit Labs <contact@evilbitlabs.com>"]
license = "MIT"
description = "A flexible tool for generating realistic network configuration test data for OPNsense"
repository = "https://github.com/EvilBit-Labs/OPNsense-config-faker"
keywords = ["networking", "testing", "configuration", "data-generation", "opnsense"]
categories = ["command-line-utilities", "development-tools::testing", "network-programming"]
readme = "README.md"
rust-version = "1.70"

[[bin]]
name = "opnsense-config-faker"
path = "src/main.rs"

[dependencies]
# CLI framework with derive macros
clap = { version = "4.5", features = ["derive", "color", "suggestions"] }
clap_complete = "4.5"

# Serialization framework
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CSV handling
csv = "1.3"

# XML processing
quick-xml = { version = "0.38", features = ["serialize"] }

# Networking utilities
ipnet = "2.9"
ipnetwork = "0.21.1"

# Random data generation
rand = { version = "0.9.2", features = ["small_rng"] }
rand_chacha = "0.9.0"
uuid = { version = "1.10", features = ["v4", "serde"] }

# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Date/time utilities
chrono = { version = "0.4", features = ["serde"] }

# Progress indicators for CLI
indicatif = "0.18"

# Terminal styling
console = "0.16"

# Performance optimization dependencies
rayon = { version = "1.8", optional = true }                # Data parallelism
tokio = { version = "1.0", features = ["full"] }            # Async runtime
bumpalo = "3.14"                                             # Arena allocation
lru = "0.16.0"                                                 # Template caching
rustc-hash = "2.1.1"                                           # Faster hashing
smallvec = "1.11"                                            # Stack-allocated vectors
xmlwriter = "0.1"                                            # Streaming XML writing

[features]
slow-tests = []
rayon = ["dep:rayon"]

[dev-dependencies]
# Testing framework
rstest = "0.26"

# Temporary files for testing
tempfile = "3.8"

# CLI testing
assert_cmd = "2.0"

# Property-based testing
proptest = "1.4"

# Benchmarking
criterion = { version = "0.7", features = ["html_reports"] }

# Performance profiling
pprof = { version = "0.15.0", features = ["criterion", "flamegraph"] }

# Test utilities
pretty_assertions = "1.4"
insta = { version = "1", features = ["yaml"] }
assert_fs = "1.1"
predicates = "3.1"
regex = "1"
roxmltree = "0.20.0"

[[bench]]
name = "vlan_generation"
harness = false

[[bench]]
name = "xml_generation"
harness = false

[[bench]]
name = "csv_operations"
harness = false

[[bench]]
name = "performance_benchmarks"
harness = false

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
debug = true

[profile.test]
debug = true
