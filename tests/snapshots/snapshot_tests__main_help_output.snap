---
source: tests/snapshot_tests.rs
expression: output.normalized_stdout()
---
A flexible tool for generating realistic network configuration test data for OPNsense Usage: opnsense-config-faker [OPTIONS] <COMMAND> Commands: generate Generate network configuration data in CSV or XML format completions Generate shell completions for the specified shell validate Validate configuration data for consistency and correctness help Print this message or the help of the given subcommand(s) Options: -q, --quiet Suppress non-essential output (progress bars, summaries, etc.) --no-color Disable colored output (useful for scripts and CI) -o, --output <OUTPUT> Global output file or directory (overrides command-specific output) -h, --help Print help -V, --version Print version Examples: Generate CSV configuration data: opnsense-config-faker generate --count 25 --format csv --output my-config.csv Generate OPNsense XML configuration: opnsense-config-faker generate --count 25 --format xml --base-config config.xml Generate XML from existing CSV: opnsense-config-faker generate --format xml --base-config config.xml --csv-file data.csv Generate configurations with firewall rules: opnsense-config-faker generate --count 25 --format csv --output config.csv --include-firewall-rules Generate advanced firewall rules: opnsense-config-faker generate --count 10 --format xml --base-config config.xml --include-firewall-rules --firewall-rule-complexity advanced Force overwrite existing files: opnsense-config-faker generate --count 10 --format csv --output test.csv --force Generate shell completions: opnsense-config-faker completions bash > opnsense-config-faker.bash Validate configuration data: opnsense-config-faker validate --input data.csv opnsense-config-faker validate --input config.xml --format xml Use global flags: opnsense-config-faker --quiet generate --count 10 --format csv opnsense-config-faker --no-color generate --count 10 --format xml --base-config config.xml
