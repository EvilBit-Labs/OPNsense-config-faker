---
source: tests/snapshot_tests.rs
expression: normalized
---
# Print an optspec for argparse to handle cmd's options that are independent of any subcommand. function __fish_opnsense_config_faker_global_optspecs string join \n h/help V/version end function __fish_opnsense_config_faker_needs_command # Figure out if the current invocation already has a command. set -l cmd (commandline -opc) set -e cmd[1] argparse -s (__fish_opnsense_config_faker_global_optspecs) -- $cmd 2>/dev/null or return if set -q argv[1] # Also print the command, so this can be used to figure out what it is. echo $argv[1] return 1 end return 0 end function __fish_opnsense_config_faker_using_subcommand set -l cmd (__fish_opnsense_config_faker_needs_command) test -z "$cmd" and return 1 contains -- $cmd[1] $argv end complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -s h -l help -d 'Print help' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -s V -l version -d 'Print version' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -f -a "generate" -d 'Generate network configuration data in CSV or XML format' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -f -a "completions" -d 'Generate shell completions for the specified shell' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -f -a "csv" -d 'DEPRECATED: Use \'generate --format csv\' instead' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -f -a "xml" -d 'DEPRECATED: Use \'generate --format xml\' instead' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_needs_command" -f -a "help" -d 'Print this message or the help of the given subcommand(s)' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s f -l format -d 'Output format (csv or xml)' -r -f -a "csv\t'Generate CSV file with VLAN configuration data' xml\t'Generate complete OPNsense XML configuration'" complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s c -l count -d 'Number of VLAN configurations to generate' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s o -l output -d 'Output file path (for CSV format) or directory (for XML format)' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l output-dir -d 'Output directory for generated XML files (XML format only)' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s b -l base-config -d 'Base OPNsense configuration XML file (required for XML format)' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l csv-file -d 'Use existing CSV file for configuration data (XML format only)' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l firewall-nr -d 'Firewall number for naming (used in filenames for XML format)' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l opt-counter -d 'OPT interface counter starting value (XML format only)' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l seed -d 'Random seed for reproducible generation' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s F -l force -d 'Force overwrite existing files' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -l no-color -d 'Disable colored output (useful for scripts and CI)' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s i -l interactive -d 'Interactive mode - prompt for missing required arguments' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand generate" -s h -l help -d 'Print help (see more with \'--help\')' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand completions" -s h -l help -d 'Print help' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand csv" -s c -l count -d 'Number of VLAN configurations to generate' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand csv" -s o -l output -d 'Output CSV file path' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand csv" -l seed -d 'Random seed for reproducible generation' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand csv" -s f -l force -d 'Force overwrite existing files' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand csv" -s h -l help -d 'Print help (see more with \'--help\')' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -s b -l base-config -d 'Base OPNsense configuration XML file' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -s c -l count -d 'Number of VLAN configurations to generate (if not using CSV)' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -l csv-file -d 'Use existing CSV file for configuration data' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -s o -l output-dir -d 'Output directory for generated XML files' -r -F complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -l firewall-nr -d 'Firewall number for naming (used in filenames)' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -l opt-counter -d 'OPT interface counter starting value' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -l seed -d 'Random seed for reproducible generation' -r complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -s f -l force -d 'Force overwrite existing files' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand xml" -s h -l help -d 'Print help (see more with \'--help\')' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand help; and not __fish_seen_subcommand_from generate completions csv xml help" -f -a "generate" -d 'Generate network configuration data in CSV or XML format' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand help; and not __fish_seen_subcommand_from generate completions csv xml help" -f -a "completions" -d 'Generate shell completions for the specified shell' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand help; and not __fish_seen_subcommand_from generate completions csv xml help" -f -a "csv" -d 'DEPRECATED: Use \'generate --format csv\' instead' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand help; and not __fish_seen_subcommand_from generate completions csv xml help" -f -a "xml" -d 'DEPRECATED: Use \'generate --format xml\' instead' complete -c opnsense-config-faker -n "__fish_opnsense_config_faker_using_subcommand help; and not __fish_seen_subcommand_from generate completions csv xml help" -f -a "help" -d 'Print this message or the help of the given subcommand(s)'
